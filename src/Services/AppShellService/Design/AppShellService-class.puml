@startuml
title IAppShellService - class diagram
package Services{
    package AppShellService{
        interface IAppShellService{
            +updateItemList(itemList: ItemBO[],userId: string): Promise<ServiceResult<boolean>>
            +getDownloadedCount(last: string,user: UserBO): Promise<ServiceResult<number | null>>
            +fetchItems(user: UserBO,currentCount: number,nextCount: number,lastItemId: string,lastBarCodeId: string,lastSyncDate: string): Promise<ServiceResult<ItemBO[] | null>>
        }
    }
}


package BOs{
    package ItemBO{
        interface ItemBO{
        
        }
    }

    package UserBO{
        interface UserBO{
           
        }
    }
}

IAppShellService --> ItemBO
IAppShellService --> UserBO

newpage 
title updateItemList()
package Services{
    package AppShellService{
        interface IAppShellService{
            +updateItemList(itemList: ItemBO[],userId: string): Promise<ServiceResult<boolean>>
        }
    }
}

package Screens{
    package InventoryAdjustmentScreenVM{
        class useInventoryAdjustmentScreenVM{
            + uploadItems(user: UserBO): void
        }
    }
}
IAppShellService <-- useInventoryAdjustmentScreenVM

newpage 
title getDownloadedCount()
package Services{
    package AppShellService{
        interface IAppShellService{
            +getDownloadedCount(last: string,user: UserBO): Promise<ServiceResult<number | null>>
        }
    }
}
package Screens{
    package InventoryAdjustmentScreenVM{
        class useInventoryAdjustmentScreenVM{
            + downloadItems(user: UserBO): void
        }
    }
}
IAppShellService <-- useInventoryAdjustmentScreenVM

newpage
title fetchItems()
package Services{
    package AppShellService{
        interface IAppShellService{
            +fetchItems(user: UserBO,currentCount: number,nextCount: number,lastItemId: string,lastBarCodeId: string,lastSyncDate: string): Promise<ServiceResult<ItemBO[] | null>>
        }
    }
}
package Screens{
    package InventoryAdjustmentScreenVM{
        class useInventoryAdjustmentScreenVM{
            + downloadAllItems(count: number,internetSpeed: number,lastSyncDate: string,userInfo: UserBO,syncDetail: ItemCatalogSyncDetailBO): void
        }
    }
}
IAppShellService <-- useInventoryAdjustmentScreenVM
@enduml